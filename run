#!/bin/bash
# Script to build and test the project, not to be considered as a part of the project itself

# "defensive Programming"
cd "$(dirname "$0")"

# Function to perform the build
build() {
    echo "Building..."   
    mkdir -p build 
    cd build
    cmake ..
    make
    cd ..
}

# usage
usage() {
    echo "Usage: $0 {build|clean|test|sandbox|install|install-python}"
}

#remove build repo
clean(){
    echo "Cleaning build..."
    rm -r build 
}

# Function to perform the tests
test() {
    build
    echo "Running tests..."
    cd build
    ctest --output-on-failure
    cd ..
}

# Function to run the sandbox
run_sandbox() {
    build
    echo "Running sandbox..."
    cd build
    ./sandbox
    cd ..
}

# Function to install the library
install() {
    # Cleaning up build directory
    echo "Installing..."
    clean
    echo "Building..."   
    mkdir -p build 
    cd build

    # Building the project
    cmake .. -DCMAKE_BUILD_TYPE=Release
    cmake --build .

    echo ""
    echo "The library is installed locally in the build directory"
    echo "To install it system-wide, run 'sudo cmake --install .' while in the build directory."
    echo "To validate the install you can run the test suite."
    echo "  NOTE: The test suite requires the GTest library to be installed."
    echo ""
}

# Function to install python code
install-python() {
    build_python
}

# Function to compile python code
build_python() {
    echo "Compiling python code..."
    python3 Python-build/setup.py build_ext --inplace
}

demo() {
  clear
  build_python
  python3 Python-build/demo.py
}
# Main script execution
case $1 in
  demo)
    demo
    ;;
  build-python)
    build_python
    ;;
  build)
    build
    ;;
  clean)
    clean
    ;;
  test)
    build
    test
    ;;
  install)
    install
    ;;
  install-python)
    install-python
    ;;
  sandbox)
    run_sandbox
    ;;
  *)
    asciiquarium
    usage
    ;;
esac        
